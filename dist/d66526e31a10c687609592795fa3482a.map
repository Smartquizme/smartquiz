{"version":3,"sources":["js/dashboard.js"],"names":["signInWithGithub","provider","firebase","auth","GithubAuthProvider","addScope","setCustomParameters","signInWithPopup","then","result","token","credential","accessToken","user","console","log","catch","error","errorCode","code","errorMessage","message","email","signIn","GoogleAuthProvider","signOut","initFirebaseAuth","onAuthStateChanged","authStateObserver","getProfilePicUrl","currentUser","photoURL","getUserName","displayName","getUserId","uid","isUserSignedIn","saveMessage","messageText","firestore","collection","add","name","text","profilePicUrl","timestamp","FieldValue","serverTimestamp","saveUrl","url","userId","loadUrls","saveImageMessage","file","imageUrl","LOADING_IMAGE_URL","messageRef","filePath","id","storage","ref","put","fileSnapshot","getDownloadURL","update","storageUri","metadata","fullPath","saveMessagingDeviceToken","messaging","getToken","currentToken","doc","set","requestNotificationsPermissions","requestPermission","onMediaFileSelected","event","preventDefault","target","files","imageFormElement","reset","type","match","data","timeout","signInSnackbarElement","MaterialSnackbar","showSnackbar","checkSignedInWithMessage","onMessageFormSubmit","e","messageInputElement","value","resetMaterialTextfield","toggleButton","onUrlFormSubmit","urlInputElement","resetTextfield","alert","urlSavedAlertElement","removeAttribute","userName","userPicElement","style","backgroundImage","addSizeToGoogleProfilePic","userNameElement","textContent","signOutButtonElement","firebaseAuthUiElement","setAttribute","signInButtonElement","element","MESSAGE_TEMPLATE","indexOf","deleteMessage","div","document","getElementById","parentNode","removeChild","insertUrl","container","createElement","innerHTML","firstChild","urlListElement","appendChild","submitButtonElement","checkSetup","window","app","Function","options","ui","firebaseui","AuthUI","start","signInOptions","EmailAuthProvider","PROVIDER_ID","signInMethod","EMAIL_LINK_SIGN_IN_METHOD","isPendingRedirect","uiConfig","callbacks","signInSuccessWithAuthResult","authResult","redirectUrl","uiShown","display","signInFlow","signInSuccessUrl","FacebookAuthProvider","tosUrl","privacyPolicyUrl","urlFormElement","imageButtonElement","mediaCaptureElement","addEventListener","performance"],"mappings":"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","file":"d66526e31a10c687609592795fa3482a.map","sourcesContent":["\n'use strict';\n\n\n// github oauth2\n\nfunction signInWithGithub(){\n  var provider = new firebase.auth.GithubAuthProvider();\nprovider.addScope('repo');\nprovider.setCustomParameters({\n  'allow_signup': 'false'\n});\n\nfirebase.auth().signInWithPopup(provider).then(function(result) {\n  // This gives you a GitHub Access Token. You can use it to access the GitHub API.\n  var token = result.credential.accessToken;\n  // The signed-in user info.\n  var user = result.user;\n  console.log(user);\n  // ...\n}).catch(function(error) {\n  // Handle Errors here.\n  var errorCode = error.code;\n  var errorMessage = error.message;\n  // The email of the user's account used.\n  var email = error.email;\n  // The firebase.auth.AuthCredential type that was used.\n  var credential = error.credential;\n  // ...\n});\n  \n}\n// Signs-in Friendly Chat.\nfunction signIn() {\n  // Sign in Firebase using popup auth and Google as the identity provider.\n  var provider = new firebase.auth.GoogleAuthProvider();\n  firebase.auth().signInWithPopup(provider);\n  \n}\n\n// Signs-out of Friendly Chat.\nfunction signOut() {\n  // Sign out of Firebase.\n  firebase.auth().signOut();\n}\n\n// Initiate firebase auth.\nfunction initFirebaseAuth() {\n  // Listen to auth state changes.\n  firebase.auth().onAuthStateChanged(authStateObserver);\n}\n\n// Returns the signed-in user's profile Pic URL.\nfunction getProfilePicUrl() {\n  return firebase.auth().currentUser.photoURL || '/images/profile_placeholder.png';\n}\n\n// Returns the signed-in user's display name.\nfunction getUserName() {\n  return firebase.auth().currentUser.displayName;\n}\n\n// Returns the signed-in user's id.\nfunction getUserId() {\n  return firebase.auth().currentUser.uid;\n}\n\n// Returns true if a user is signed-in.\nfunction isUserSignedIn() {\n  return !!firebase.auth().currentUser;\n}\n\n// Saves a new message on the Cloud Firestore.\nfunction saveMessage(messageText) {\n  // Add a new message entry to the Firebase database.\n  return firebase.firestore().collection('messages').add({\n    name: getUserName(),\n    text: messageText,\n    profilePicUrl: getProfilePicUrl(),\n    timestamp: firebase.firestore.FieldValue.serverTimestamp()\n  }).catch(function(error) {\n    console.error('Error writing new message to Firebase Database', error);\n  });\n}\n\n// Saves a new url on the Cloud Firestore.\nfunction saveUrl(url) {\n  // Add a new url entry to the Firebase database.\n  return firebase.firestore().collection('urls').add({\n    url: url,\n    name: getUserName(),\n    userId: getUserId(),\n    timestamp: firebase.firestore.FieldValue.serverTimestamp()\n  }).catch(function(error) {\n    console.error('Error writing new message to Firebase Database', error);\n  });\n}\n// Loads chat messages history and listens for upcoming ones.\nfunction loadUrls() {\n  // Create the query to load the last 12 messages and listen for new ones.\n\n}\n\n\n\n\n// Saves a new message containing an image in Firebase.\n// This first saves the image in Firebase storage.\nfunction saveImageMessage(file) {\n  // 1 - We add a message with a loading icon that will get updated with the shared image.\n  firebase.firestore().collection('messages').add({\n    name: getUserName(),\n    imageUrl: LOADING_IMAGE_URL,\n    profilePicUrl: getProfilePicUrl(),\n    timestamp: firebase.firestore.FieldValue.serverTimestamp()\n  }).then(function(messageRef) {\n    // 2 - Upload the image to Cloud Storage.\n    var filePath = firebase.auth().currentUser.uid + '/' + messageRef.id + '/' + file.name;\n    return firebase.storage().ref(filePath).put(file).then(function(fileSnapshot) {\n      // 3 - Generate a public URL for the file.\n      return fileSnapshot.ref.getDownloadURL().then((url) => {\n        // 4 - Update the chat message placeholder with the image’s URL.\n        return messageRef.update({\n          imageUrl: url,\n          storageUri: fileSnapshot.metadata.fullPath\n        });\n      });\n    });\n  }).catch(function(error) {\n    console.error('There was an error uploading a file to Cloud Storage:', error);\n  });\n}\n\n// Saves the messaging device token to the datastore.\nfunction saveMessagingDeviceToken() {\n  firebase.messaging().getToken().then(function(currentToken) {\n    if (currentToken) {\n      console.log('Got FCM device token:', currentToken);\n      // Saving the Device Token to the datastore.\n      firebase.firestore().collection('fcmTokens').doc(currentToken)\n          .set({uid: firebase.auth().currentUser.uid});\n    } else {\n      // Need to request permissions to show notifications.\n      requestNotificationsPermissions();\n    }\n  }).catch(function(error){\n    console.error('Unable to get messaging token.', error);\n  });\n}\n\n// Requests permissions to show notifications.\nfunction requestNotificationsPermissions() {\n  console.log('Requesting notifications permission...');\n  firebase.messaging().requestPermission().then(function() {\n    // Notification permission granted.\n    saveMessagingDeviceToken();\n  }).catch(function(error) {\n    console.error('Unable to get permission to notify.', error);\n  });\n}\n\n// Triggered when a file is selected via the media picker.\nfunction onMediaFileSelected(event) {\n  event.preventDefault();\n  var file = event.target.files[0];\n\n  // Clear the selection in the file picker input.\n  imageFormElement.reset();\n\n  // Check if the file is an image.\n  if (!file.type.match('image.*')) {\n    var data = {\n      message: 'You can only share images',\n      timeout: 2000\n    };\n    signInSnackbarElement.MaterialSnackbar.showSnackbar(data);\n    return;\n  }\n  // Check if the user is signed-in\n  if (checkSignedInWithMessage()) {\n    saveImageMessage(file);\n  }\n}\n\n// Triggered when the send new message form is submitted.\nfunction onMessageFormSubmit(e) {\n  e.preventDefault();\n  // Check that the user entered a message and is signed in.\n  if (messageInputElement.value && checkSignedInWithMessage()) {\n    saveMessage(messageInputElement.value).then(function() {\n      // Clear message text field and re-enable the SEND button.\n      resetMaterialTextfield(messageInputElement);\n      toggleButton();\n    });\n  }\n}\n// Triggered generate quiz by article form is submitted.\nfunction onUrlFormSubmit(e) {\n  e.preventDefault();\n  // Check that the user entered a message and is signed in.\n  if (urlInputElement.value && checkSignedInWithMessage()) {\n    saveUrl(urlInputElement.value).then(function() {\n      // Clear message text field and re-enable the SEND button.\n      resetTextfield(urlInputElement);\n      // toggleButton();\n      alert(\"yehh\");\n      urlSavedAlertElement.removeAttribute('hidden');\n    });\n  }\n}\n// Triggers when the auth state change for instance when the user signs-in or signs-out.\nfunction authStateObserver(user) {\n  if (user) { // User is signed in!\n    // Get the signed-in user's profile pic and name.\n    var profilePicUrl = getProfilePicUrl();\n    var userName = getUserName();\n\n    // Set the user's profile pic and name.\n    userPicElement.style.backgroundImage = 'url(' + addSizeToGoogleProfilePic(profilePicUrl) + ')';\n    userNameElement.textContent = userName;\n\n    // Show user's profile and sign-out button.\n    userNameElement.removeAttribute('hidden');\n    userPicElement.removeAttribute('hidden');\n    signOutButtonElement.removeAttribute('hidden');\n    //dashboardButtonElement.removeAttribute('hidden');\n    firebaseAuthUiElement.setAttribute('hidden', 'true');\n\n    // Hide sign-in button.\n    signInButtonElement.setAttribute('hidden', 'true');\n\n    // We save the Firebase Messaging Device token and enable notifications.\n    //saveMessagingDeviceToken();\n  } else { // User is signed out!\n    // Hide user's profile and sign-out button.\n    userNameElement.setAttribute('hidden', 'true');\n    userPicElement.setAttribute('hidden', 'true');\n    signOutButtonElement.setAttribute('hidden', 'true');\n    //dashboardButtonElement.setAttribute('hidden', 'true');\n\n    // Show sign-in button.\n    signInButtonElement.removeAttribute('hidden');\n    firebaseAuthUiElement.removeAttribute('hidden');\n  }\n}\n\n// Returns true if user is signed-in. Otherwise false and displays a message.\nfunction checkSignedInWithMessage() {\n  // Return true if the user is signed in Firebase\n  if (isUserSignedIn()) {\n    return true;\n  }\n\n  // Display a message to the user using a Toast.\n  var data = {\n    message: 'You must sign-in first',\n    timeout: 2000\n  };\n  //signInSnackbarElement.MaterialSnackbar.showSnackbar(data);\n  alert(\"please sign in first\");\n  return false;\n}\n\n// Resets the given MaterialTextField.\nfunction resetTextfield(element) {\n  element.value = '';\n}\n\n// Template for messages.\nvar MESSAGE_TEMPLATE =\n    '<div class=\"message-container\">' +\n      '<div class=\"spacing\"><div class=\"pic\"></div></div>' +\n      '<div class=\"message\"></div>' +\n      '<div class=\"name\"></div>' +\n    '</div>';\n\n// Adds a size to Google Profile pics URLs.\nfunction addSizeToGoogleProfilePic(url) {\n  if (url.indexOf('googleusercontent.com') !== -1 && url.indexOf('?') === -1) {\n    return url + '?sz=150';\n  }\n  return url;\n}\n\n// A loading image URL.\nvar LOADING_IMAGE_URL = 'https://www.google.com/images/spin-32.gif?a';\n\n// Delete a Message from the UI.\nfunction deleteMessage(id) {\n  var div = document.getElementById(id);\n  // If an element for that message exists we delete it.\n  if (div) {\n    div.parentNode.removeChild(div);\n  }\n}\n\nfunction insertUrl(id, timestamp) {\n  const container = document.createElement('div');\n  container.innerHTML = MESSAGE_TEMPLATE;\n  const div = container.firstChild;\n  div.setAttribute('id', id);\n\n  // If timestamp is null, assume we've gotten a brand new message.\n  // https://stackoverflow.com/a/47781432/4816918\n  div.setAttribute('timestamp', timestamp);\n\n  // figure out where to insert new message\n\n    urlListElement.appendChild(div);\n  return div;\n}\n\n\n// Enables or disables the submit button depending on the values of the input\n// fields.\nfunction toggleButton() {\n  if (messageInputElement.value) {\n    submitButtonElement.removeAttribute('disabled');\n  } else {\n    submitButtonElement.setAttribute('disabled', 'true');\n  }\n}\n\n// Checks that the Firebase SDK has been correctly setup and configured.\nfunction checkSetup() {\n  if (!window.firebase || !(firebase.app instanceof Function) || !firebase.app().options) {\n    window.alert('You have not configured and imported the Firebase SDK. ' +\n        'Make sure you go through the codelab setup instructions and make ' +\n        'sure you are running the codelab using `firebase serve`');\n  }\n}\n\n// firebase ui\n\n// Initialize the FirebaseUI Widget using Firebase.\nvar ui = new firebaseui.auth.AuthUI(firebase.auth());\nui.start('#firebaseui-auth-container', {\n  signInOptions: [\n    {\n      provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,\n      signInMethod: firebase.auth.EmailAuthProvider.EMAIL_LINK_SIGN_IN_METHOD,\n      // firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n      // firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n      // firebase.auth.TwitterAuthProvider.PROVIDER_ID,\n      // firebase.auth.GithubAuthProvider.PROVIDER_ID\n    }\n  ],\n  // Other config options...\n});\n\n\n\n// Is there an email link sign-in?\nif (ui.isPendingRedirect()) {\n  ui.start('#firebaseui-auth-container', uiConfig);\n}\n// This can also be done via:\n// if ((firebase.auth().isSignInWithEmailLink(window.location.href)) {\n//   ui.start('#firebaseui-auth-container', uiConfig);\n// }\n\n\nvar uiConfig = {\n  callbacks: {\n    signInSuccessWithAuthResult: function(authResult, redirectUrl) {\n      // User successfully signed in.\n      // Return type determines whether we continue the redirect automatically\n      // or whether we leave that to developer to handle.\n      return true;\n    },\n    uiShown: function() {\n      // The widget is rendered.\n      // Hide the loader.\n      document.getElementById('loader').style.display = 'none';\n    }\n  },\n  // Will use popup for IDP Providers sign-in flow instead of the default, redirect.\n  signInFlow: 'popup',\n  signInSuccessUrl: 'dashboard.html',\n  signInOptions: [\n    // Leave the lines as is for the providers you want to offer your users.\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n    firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n    firebase.auth.EmailAuthProvider.PROVIDER_ID\n  ],\n  // Terms of service url.\n  tosUrl: 'terms-conditions.html',\n  // Privacy policy url.\n  privacyPolicyUrl: 'privacy-policy.html'\n};\n\n// The start method will wait until the DOM is loaded.\nui.start('#firebaseui-auth-container', uiConfig);\n\n\n// Checks that Firebase has been imported.\ncheckSetup();\n\n// Shortcuts to DOM Elements.\n// var messageListElement = document.getElementById('messages');\n// var messageFormElement = document.getElementById('message-form');\n// var messageInputElement = document.getElementById('message');\nvar urlListElement = document.getElementById('urls');\nvar urlFormElement = document.getElementById('url-form');\nvar urlInputElement = document.getElementById('url');\nvar submitButtonElement = document.getElementById('submit');\nvar imageButtonElement = document.getElementById('submitImage');\nvar imageFormElement = document.getElementById('image-form');\nvar mediaCaptureElement = document.getElementById('mediaCapture');\nvar userPicElement = document.getElementById('user-pic');\nvar userNameElement = document.getElementById('user-name');\nvar signInButtonElement = document.getElementById('sign-in');\nvar firebaseAuthUiElement = document.getElementById('firebaseui-auth-container');\nvar signOutButtonElement = document.getElementById('sign-out');\n//var dashboardButtonElement = document.getElementById('dashboard');\nvar urlSavedAlertElement = document.getElementById('url-saved-alert');\n\n// Saves message on form submit.\n//messageFormElement.addEventListener('submit', onMessageFormSubmit);\nsignOutButtonElement.addEventListener('click', signOut);\n//signInButtonElement.addEventListener('click', signIn);\n\n// saves url on form submit\nurlFormElement.addEventListener('submit', onUrlFormSubmit);\n\n// Toggle for the button.\n// messageInputElement.addEventListener('keyup', toggleButton);\n// messageInputElement.addEventListener('change', toggleButton);\n\n// Events for image upload.\n// imageButtonElement.addEventListener('click', function(e) {\n//   e.preventDefault();\n//   mediaCaptureElement.click();\n// });\n// mediaCaptureElement.addEventListener('change', onMediaFileSelected);\n\n// initialize Firebase\ninitFirebaseAuth();\n\n // TODO: Enable Firebase Performance Monitoring.\nfirebase.performance();\n\n// We load currently existing chat messages and listen to new ones.\nloadUrls();\n"]}