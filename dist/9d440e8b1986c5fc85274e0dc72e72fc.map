{"version":3,"sources":["js/quiz.js"],"names":["urlSubmit","url","urlInput","value","wtf","fetch","then","doc","text","nlp","wordCount","t","paragraphs","map","l","questions","push","sentences","q","question","imgSrc","choiceA","choiceB","correct","alert","generate_question","e","preventDefault","noOfQuestions","document","forms","isNaN","questionNumsection","style","display","quizzsection","cleantext","str","replace","start","getElementById","quiz","qImg","choiceC","counter","timeGauge","progress","scoreDiv","lastQuestion","runningQuestion","count","questionTime","gaugeWidth","gaugeUnit","TIMER","score","renderQuestion","innerHTML","startQuiz","renderProgress","renderCounter","setInterval","qIndex","width","answerIsWrong","clearInterval","scoreRender","checkAnswer","answer","answerIsCorrect","backgroundColor","scorePerCent","Math","round","length","img","urlInputBtn","question_text","questtionNoformElement","noofquestionsinput","addEventListener","finalgeneratebtn"],"mappings":"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","file":"9d440e8b1986c5fc85274e0dc72e72fc.map","sourcesContent":["function urlSubmit(){\n\tvar url = urlInput.value;\n\twtf.fetch(url).then((doc) => {\n        let text = nlp(doc).wordCount()\n      var t = doc.paragraphs().map(l => l.text())\n\t  questions.push(t);\n\t  doc.sentences().map(function (l) {\n\t\t  \n\t\t  \t  q = {\n\t\t\t        question : l.text(),\n\t\t\t        imgSrc : \"img/html.png\",\n\t\t\t        choiceA : \"True\",\n\t\t\t        choiceB : \"False\",\n\t\t\t        //choiceC : \"Wrong\",\n\t\t\t        correct : \"A\"\n\t\t\t    }\n                questions.push(q); \n                // console.log(q);\n                // return l.text(); \n        });\n        alert(text);\n\n\t})\n}\n\nfunction generate_question(e){\n    e.preventDefault();\nvar noOfQuestions = document.forms[\"question_num_form\"][\"noofquestions\"].value;\n// If x is Not a Number or less than one or greater than 10\nif (isNaN(noOfQuestions) || noOfQuestions < 1 || noOfQuestions > 10) {\n  alert(\"Input not valid\");\n  return false;\n} else {\n  \n}\nquestionNumsection.style.display = \"none\";\nquizzsection.style.display = \"block\";\n}\n\nfunction cleantext(str){\n  // remove any citations\n   return str.replace(/\\[(.*?)\\]+/g, '');\n}\n\n\n// var url = 'https://en.wikipedia.org/wiki/Rajneesh&selector=p&scrape=text&pretty=true';\n// fetch('https://web.scraper.workers.dev/?url='+url)\n//   .then(response => response.json())\n//   .then(data => console.log(data));\n\n\n\n\n// select all elements\nconst start = document.getElementById(\"start\");\nconst quiz = document.getElementById(\"quiz\");\nconst question = document.getElementById(\"question\");\nconst qImg = document.getElementById(\"qImg\");\nconst choiceA = document.getElementById(\"A\");\nconst choiceB = document.getElementById(\"B\");\nconst choiceC = document.getElementById(\"C\");\nconst counter = document.getElementById(\"counter\");\nconst timeGauge = document.getElementById(\"timeGauge\");\nconst progress = document.getElementById(\"progress\");\nconst scoreDiv = document.getElementById(\"scoreContainer\");\n\n// create our questions\nlet questions = [\n    {\n        question : \"Bhagwan Shri Rajneesh, and later as Osho, was an Indian godman?\",\n        imgSrc : \"img/html.png\",\n        choiceA : \"True\",\n        choiceB : \"False\",\n        //choiceC : \"Wrong\",\n        correct : \"A\"\n    },{\n        question : \"In 1961, aged 19, Rajneesh began his studies at Hitkarini College in Jabalpur?\",\n        imgSrc : \"img/css.png\",\n        choiceA : \"True\",\n        choiceB : \"False\",\n        //choiceC : \"Wrong\",\n        correct : \"B\"\n    },{\n        question : \"here are widely divergent assessments of Rajneesh's qualities as a thinker and speaker.\",\n        imgSrc : \"img/js.png\",\n        choiceA : \"True\",\n        choiceB : \"False\",\n        //choiceC : \"Correct\",\n        correct : \"A\"\n    }\n];\n\n// create some variables\n//const lastQuestion = questions.length - 1;\nconst lastQuestion = document.forms[\"question_num_form\"][\"noofquestions\"].value;\nlet runningQuestion = 0;\nlet count = 0;\nconst questionTime = 10; // 10s\nconst gaugeWidth = 150; // 150px\nconst gaugeUnit = gaugeWidth / questionTime;\nlet TIMER;\nlet score = 0;\n\n// render a question\nfunction renderQuestion(){\n    let q = questions[runningQuestion];\n    \n    question.innerHTML = \"<p>\"+ q.question +\"</p>\";\n    //qImg.innerHTML = \"<img src=\"+ q.imgSrc +\">\";\n    choiceA.innerHTML = q.choiceA;\n    choiceB.innerHTML = q.choiceB;\n    //choiceC.innerHTML = q.choiceC;\n}\n\n\n// start quiz\nfunction startQuiz(){\n\t //var noOfQuestions = document.forms[\"question_num_form\"][\"noofquestions\"].value;\n    questionNumsection.style.display = \"none\";\n    renderQuestion();\n    quiz.style.display = \"block\";\n    renderProgress();\n    renderCounter();\n    TIMER = setInterval(renderCounter,1000); // 1000ms = 1s\n}\n\n// render progress\nfunction renderProgress(){\n\t// lastQuestion\n    for(let qIndex = 0; qIndex <=lastQuestion; qIndex++){\n        progress.innerHTML += \"<div class='prog' id=\"+ qIndex +\"></div>\";\n    }\n}\n\n// counter render\n\nfunction renderCounter(){\n    if(count <= questionTime){\n        counter.innerHTML = count;\n        timeGauge.style.width = count * gaugeUnit + \"px\";\n        count++\n    }else{\n        count = 0;\n        // change progress color to red\n        answerIsWrong();\n        if(runningQuestion < lastQuestion){\n            runningQuestion++;\n            renderQuestion();\n        }else{\n            // end the quiz and show the score\n            clearInterval(TIMER);\n            scoreRender();\n        }\n    }\n}\n\n// checkAnswer\n\nfunction checkAnswer(answer){\n    if( answer == questions[runningQuestion].correct){\n        // answer is correct\n        score++;\n        // change progress color to green\n        answerIsCorrect();\n    }else{\n        // answer is wrong\n        // change progress color to red\n        answerIsWrong();\n    }\n    count = 0;\n    if(runningQuestion < lastQuestion){\n        runningQuestion++;\n        renderQuestion();\n    }else{\n        // end the quiz and show the score\n        clearInterval(TIMER);\n        scoreRender();\n    }\n}\n\n// answer is correct\nfunction answerIsCorrect(){\n    document.getElementById(runningQuestion).style.backgroundColor = \"#0f0\";\n}\n\n// answer is Wrong\nfunction answerIsWrong(){\n    document.getElementById(runningQuestion).style.backgroundColor = \"#f00\";\n}\n\n// score render\nfunction scoreRender(){\n    scoreDiv.style.display = \"block\";\n    \n    // calculate the amount of question percent answered by the user\n    const scorePerCent = Math.round(100 * score/questions.length);\n    \n    // choose the image based on the scorePerCent\n    let img = (scorePerCent >= 80) ? \"img/5.png\" :\n              (scorePerCent >= 60) ? \"img/4.png\" :\n              (scorePerCent >= 40) ? \"img/3.png\" :\n              (scorePerCent >= 20) ? \"img/2.png\" :\n              \"img/1.png\";\n    \n    //scoreDiv.innerHTML = \"<img src=\"+ img +\">\";\n    scoreDiv.innerHTML += \"<p>\"+ scorePerCent +\"%</p>\";\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar urlInput = document.getElementById('urlInput');\nvar urlInputBtn = document.getElementById('submitUrl');\n//var generateBtn = document.getElementById('finalgeneratebtn');\nvar quizzsection = document.getElementById('quizzsection');\nvar question_text = document.getElementById('question-text');\nvar questtionNoformElement = document.getElementById('questtionno-form');\nvar noofquestionsinput = document.getElementById('noofquestions');\n\n\n//generateBtn.addEventListener('click', GenerateQuiz);\nquesttionNoformElement.addEventListener('submit', generate_question);\nfinalgeneratebtn.addEventListener(\"click\",startQuiz);\n"]}